# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and Release

on:
  # 推送带tag时自动触发
  push:
    tags:
      - "v*.*.*"
  # 或者你也可以使用下面的方式手动触发
  workflow_dispatch:

jobs:
  build-release:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Go mod tidy
        run: go mod tidy

      # 构建 Linux 64-bit
      - name: Build Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o my_telegram_downloader_linux main.go

      # 构建 Windows 64-bit
      - name: Build Windows
        run: |
          GOOS=windows GOARCH=amd64 go build -o my_telegram_downloader_windows.exe main.go

      # 打包 Linux 产物到 tar.gz
      - name: Archive Linux
        run: |
          mkdir release_linux
          cp my_telegram_downloader_linux config.json release_linux/
          tar -czvf my_telegram_downloader_linux.tar.gz -C release_linux .

      # 打包 Windows 产物到 zip
      - name: Archive Windows
        run: |
          mkdir release_windows
          cp my_telegram_downloader_windows.exe config.json release_windows/
          zip -r my_telegram_downloader_windows.zip release_windows

      # 发布到 GitHub Releases
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            my_telegram_downloader_linux.tar.gz
            my_telegram_downloader_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
